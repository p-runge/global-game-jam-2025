on:
  push:
    branches:
      - main
      # TODO: remove this line after finishing feature
      - feat/*
  pull_request:
    branches:
      - main

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:
      - name: just do anything
        run: echo "Hello, world!"

      - name: log vars
        run: |
          echo ${{ vars.APP_NAME }} ${{ vars.SSH_HOST }} ${{ vars.SSH_USER }}
          touch test.txt
          echo "file created"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > test.txt
          echo "file written"
          # echo contents of the file
          cat test.txt

      # - name: Ping via ssh
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ vars.SSH_HOST }}
      #     username: ${{ vars.SSH_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       echo "SSH connection successful"

      - name: connect with ssh vanilla
        run: |
          ssh -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }} "echo 'SSH connection successful'"

      # - name: Checkout code
      #   uses: actions/checkout@v2

      # - name: Install dependencies
      #   run: npm install -g pnpm && pnpm install

      # - name: Typecheck
      #   run: pnpm typecheck

      # - name: Lint
      #   run: pnpm lint

      # - name: Build
      #   run: pnpm build

      # - name: Copy files to web server only after all checks passed
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ vars.SSH_HOST }}
      #     username: ${{ vars.SSH_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     source: ".next"
      #     target: "/srv/${{ vars.APP_NAME }}"

      # - name: Deploy
      #   # Use the 'appleboy/ssh-action' action for SSH deployment
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ vars.SSH_HOST }}
      #     username: ${{ vars.SSH_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       cd /srv/${{ vars.APP_NAME }}
      #       pm2 restart ${{ vars.APP_NAME }}

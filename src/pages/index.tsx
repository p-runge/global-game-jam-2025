import { DndContext, type DragEndEvent } from "@dnd-kit/core";
import Head from "next/head";
import Link from "next/link";

import Card from "~/components/card";
import Draggable from "~/components/draggable";
import Droppable from "~/components/droppable";
import {
  type DraggableDroppableMap,
  type DroppableId,
  useDroppableManager,
} from "~/hooks/droppable-manager";
import { api } from "~/utils/api";

const initialData: DraggableDroppableMap = {
  A: [{ id: "1" }, { id: "2" }, { id: "3" }],
  B: [{ id: "4" }],
  C: [{ id: "5" }],
};
export default function Home() {
  const hello = api.post.hello.useQuery({ text: "from tRPC" });

  const { droppables, moveItem } = useDroppableManager(initialData);

  const handleDragEnd = (event: DragEndEvent) => {
    const { active, over } = event;

    if (typeof active?.id !== "string") {
      console.error("Active id is not a string");
      return;
    }
    if (typeof over?.id !== "string") {
      console.error("Over id is not a string");
      return;
    }

    const activeDroppableId = active.data.current?.droppableId as
      | DroppableId
      | undefined;
    if (!activeDroppableId) return;

    if (over) {
      moveItem(active.id, activeDroppableId, over.id as DroppableId);
    }
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <DndContext onDragEnd={handleDragEnd}>
        <div className="">
          {(Object.keys(droppables) as DroppableId[]).map((droppableId) => (
            <Droppable key={droppableId} id={droppableId}>
              {droppables[droppableId].map(({ id }, i) => (
                <Draggable key={i} id={id} droppableId={droppableId}>
                  <Card id={id} title={id} />
                </Draggable>
              ))}
            </Droppable>
          ))}
        </div>
      </DndContext>

      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">First Steps →</h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">Documentation →</h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <p className="text-2xl text-white">
            {hello.data ? hello.data.greeting : "Loading tRPC query..."}
          </p>
        </div>
      </main>
    </>
  );
}
